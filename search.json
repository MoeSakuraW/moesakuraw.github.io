[{"title":"搭建和萌樱同款的 Hexo","date":"2020-01-06T06:55:59.000Z","url":"/archives/hexo/","tags":["Hexo","Gulp","Suka"],"content":"有一说一，Hexo 真香。顺便安利一下苏卡卡大佬写的主题 Suka 。 设置代理设置代理可以加快下载速度，没有或者不知道是什么的小伙伴可以跳到设置 Git / GitHub 萌樱的 http 代理端口是 7890 ，小伙伴们跟居自己的实际情况修改 npm Git 不建议用 socks5 协议，因为每次部署到 GitHub 的时候都要输入密码跟用户名 设置 Git / GitHub 打开 %USERPROFILE%/.ssh ，用文本编辑器打开 id_rsa.pub 复制所有文本 打开 GitHub - Setting - SSH and GPG keys - New SSH key Title 随意填，Key 填刚刚复制的文本，然后按 Add SSH Key 安装Hexo 主题 打开主题文件夹，复制 _config.example.yml 重命名为 _config.yml 打开主题文件夹中的 site_config.yml ，复制所有文本粘贴添加到 Hexo 文件夹的 _config.yml 里 修改 site_config.yml 启用 Suka 主题 主题具体配置可以看 Suka 主题文档 其他插件Gulp Gulp 的食用方法可以看「用 Gulp 优化 Hexo」 hexo-filter-nofollow 打开 _config.yml 添加 必须排除 www.google.com ，不然主题的本地搜索不能用 hexo-generator-feed 打开 _config.yml 添加 hexo-generator-seo-friendly-sitemap 打开 _config.yml 添加 Hexo 食用方法 部署到 GitHub 打开 GitHub 新建一个仓库 仓库名称必须为 Github 用户名.github.io ，其他默认 打开 _config.yml 修改 deploy 生成页面后，运行以下命令即可 😋 Enjoy it !"},{"title":"用 Gulp 优化 Hexo","date":"2020-01-04T04:50:30.000Z","url":"/archives/hexo-gulp/","tags":["Hexo","Gulp"],"content":"萌樱这两天把博客从 Typecho 搬到 Hexo ，主题也从 handsome 换成 Suka 了，部署在 GitHub 。Hexo 的纯静态页面加载真的很快，真香警告。 虽然 Hexo 速度已经很快了，但我们还可以用 Gulp 继续优化 Hexo 。萌樱这里分享一个 Google 大法找到食用起来很方便的 gulpfile.js 。 食用方法 在 Hexo 文件夹下新建一个 gulpfile.js 文件，粘贴以下代码然后保存 萌樱稍微修改了一下，小伙伴们可以根据自己的实际情况修改 用 Hexo 生成页面后，运行 Gulp 即可 😋 Enjoy it ! 参考Optimize Hexo With Gulp"},{"title":"ss-panel-v3-mod_Uim + V2Ray Docker 对接","date":"2020-01-03T04:52:08.000Z","url":"/archives/sspanel-v2ray-docker/","tags":["Docker","V2Ray"],"content":"一直以来用的都是 aes-256-gcm + plain 的 SS ，但是这两天开始不太好使了，经常断流。有一说一，换了 V2Ray 之后还挺稳定的，真香。 前端面板必须是 v2rayv3 版的 ss-panel-v3-mod_Uim ，后端是 Rico 免费版的 V2Ray Docker 。相比免费版，收费版功能多一些，自用的话免费版就可以了。至于客户端，我吹爆 Clash 。 前端面板搭建起来不难，有兴趣的小伙伴可以去看看 SSPanel UIM 使用文档 。这里简单分享一下萌樱自用 V2Ray 配置的 Docker 对接，其他需要的配置可以自行查阅 v2ray Rico 版使用教程 ，基本上都差不多。 对接完成之后需要注意的是，前端面板必须要保持稳定。不然前端面板崩了无法访问时，所对接的全部节点都将无法使用。 前端面板设置WS + TLS （Caddy 提供） 单端口多用户启用：只启用单端口多用户 节点类型：V2Ray 添加完后点击单独一个节点是下面这样的 后端 Docker 对接免费版后端貌似只能用 webapi 对接 根据提示选择/输入 1) install 1) Docker_Caddy ssrpanel_url：$_ENV[‘baseUrl’] ssrpanel key：$_ENV[‘muKey’] use ssrpanel speedtest：默认 ssrpanel node_id：节点 ID Setting V2ray backend API Listen port：默认 Setting if the node go downwith panel：默认 caddy v2ray domain：前端面板设置的域名 caddy v2ray path：默认 caddy v2ray tls email：你的邮箱 caddy v2ray local listen port：默认 caddy listen port：默认 😋 Enjoy it !"},{"title":"HP 暗影精灵 2 EFI（macOS Catalina 10.15.2）","date":"2020-01-02T15:00:52.000Z","url":"/archives/efi-hp-catalina/","tags":["macOS","黑苹果"],"content":"萌樱这里分享一个在 GitHub 上找到的 HP 暗影精灵 2 macOS Catalina 10.15 的 EFI 。暂时没遇到影响日常使用的 Bug ，WiFi 不换网卡无解。 Github： 下面是萌樱更新了目前最新的 CLOVER 以及驱动的 EFI GitHub： 下载EFI：macOS Catalina 10.15 With Clover 5100.zip 安装不知道怎么安装 macOS 的小伙伴可以看「HP 暗影精灵 2 安装黑苹果（macOS Mojave 10.14.5）」，里面已经写得很详细，这里就不再赘述了。 系统写入进 U 盘后，最好先把 U 盘 中 EFI 分区里的文件夹全部删除，再粘贴下载好的 EFI 到 U 盘，这样就不会有多余的文件了。 😋 Enjoy it !"},{"title":"Qinvideo - 基于 Node.js + MongoDB 的前后端分离的动漫 CMS","date":"2020-01-02T12:00:05.000Z","url":"/archives/qinvideo/","tags":["Debian","OneinStack","MongoDB","Node.js"],"content":"萌樱这里分享一个基于 Node.js + MongoDB 的前后端分离的动漫 CMS 。到目前为止，V1.0 版已经停更，V2.0 版还在写。这套 CMS 有免费跟付费两个版本，付费版有 Andorid 客户端，而且能够快速添加番剧，其他的功能与免费版基本一样。 官网： GitHub： 使用文档： 运行环境安装 Node.js 用 OneinStack 安装 Nginx + MongoDB 数据库为了减少不必要的麻烦以及运行错误（大雾），先关闭 OneinStack 安装 MongoDB 时默认开启的用户认证。 打开 /etc/mongod.conf ，修改 authorization 为 disabled 并保存 MongoDB 只有插入一条数据时，数据库才会真正被创建 创建一个数据库并在数据库里插入一条数据 下载安装用 OneinStack 新建一个站点，创建时添加伪静态 打开网站目录，下载 Qinvideo 并安装 修改网站目录权限 打开 config.js 修改配置文件 修改 uri 为 \"mongodb://localhost:27017/数据库名\" 修改 salt 以及 tokenSecret 为任意字符串 按 Ctrl + C 终止运行 出现 Mongoose connection connected 表示成功运行 如果报错，检查配置文件和数据库是否配置正确 网站配置打开 /usr/local/nginx/conf/vhost/网站域名.conf 修改网站运行目录 打开 /usr/local/nginx/conf/rewrite/伪静态.conf ，添加以下配置 重启 Nginx 运行打开网站目录运行 app.js 即可 成功运行后按 Ctrl + A 再按 D 后台运行。 网址/qinmei 是后台管理面板的地址 网址/web 是 PC 端的前端地址 网址/m 是移动端的前端地址 😋 Enjoy it !"},{"title":"搭建 Telegram 私聊机器人","date":"2020-01-02T09:48:34.000Z","url":"/archives/tg-forwarder-bot/","tags":["Debian","Python","Telegram"],"content":"因为 +86 的手机号骚扰广告太多，Telegram 官方限制了部分 +86 的用户对其他非 +86 用户私聊。如果有私聊需要，被限制的用户可以用官方的 @Spam Info Bot 解除限制，而被私聊的用户可以用私聊机器人。 萌樱这里分享的是托尔酱用 Python 3 写的一个消息转发机器人，被转发的消息会带消发送人的用户 id ，搭建起来也简单方便。 GitHub： 在 @BotFather 处申请一个机器人并获取机器人的 API Token 用 @userinfobot 获取自己的用户 id 修改 config.json ，token 填机器人的 API Token ，admin 填自己的用户 id 必须用 Python 3 运行，并且不要尝试给自己的机器人发消息，否则会报错 按 Ctrl + A 再按 D 后台运行 😋 Enjoy it !"},{"title":"手动编译 TCP BBR v2 Alpha/Preview 内核","date":"2020-01-02T06:52:58.000Z","url":"/archives/bbrv2-alpha/","tags":["Debian","Kernel","内核"],"content":"相信小伙伴们对 Google 的 TCP BBR 拥塞控制算法都不陌生。dog250 大佬曾经提出过 TCP BBR 存在的一些问题并提供了修正后的代码，于是有了 BBRplus 。Google 也并非不知道初代 BBR 存在的问题，如今 BBR v2 Alpha/Preview 已经发布了。 如果想体验 BBR v2 ，可以直接下已经载编译完成的内核或者用一键脚本进行更换。虽然萌樱不能明确告诉小伙伴们 BBRplus 跟 BBR v2 哪个加速效果更好，但萌樱推荐用 Google 官方的 BBR v2 。 小伙伴们可以自行体验，毕竟同一套算法在不同的网络环境中也会存在很大差异。 GitHub： TCP BBR v2 alpha 源码：tcp_bbr2.c 安装编译环境 编译内核 进入 Networking support ---> Networking options ---> TCP: advanced congestion control ---> ，选中 BBR2 TCP 按空格标上 M ，其他默认，然后保存退出。 开始编译 按 Ctrl + A 再按 D 后台编译 编译需要很长的时间，编译完成后 /root 下生成以下文件 更换内核 OpenVZ 虚拟化技术的 VPS 不能更换内核 对内核进行操作有风险，请确保数据安全 推荐在纯净的系统上进行更换 以 Debian 9 64-bit 为例 开启 BBR v2输入以下命令开启 BBR v2 输入以下命令开启 ECN 查看是否开启 BBR v2 显示以下即已开启 BBR v2 查看 BBR v2 是否生效 显示以下即 BBR v2 已生效 😋 Enjoy it !"},{"title":"Debian 更换 XanMod Kernel","date":"2020-01-02T06:13:55.000Z","url":"/archives/xanmod-kernel/","tags":["Debian","Kernel","内核"],"content":"XanMod Kernel 是一个第三方编译的 Linux 内核。稳定性还可以，换上自动开启 BBR ，其他的特性萌樱在使用过程中基本没有什么感觉，主要是最新版内核尝鲜。分享给喜欢第三方编译或者喜欢用最新版内核的小伙伴。 官网： OpenVZ 虚拟化技术的 VPS 不能更换内核 对内核进行操作有风险，请确保数据安全 推荐在纯净的系统上进行更换 以 Debian 9 64-bit 为例 更换内核 删除内核 如果要换回原版内核，就不要删除原版内核了，用以下相似的命令删除 XanMod Kernel 即可 😋 Enjoy it !"},{"title":"Debian 8 apt-get update 失败解决方法","date":"2020-01-02T05:48:52.000Z","url":"/archives/failed-to-fetch/","tags":["Debian"],"content":"萌樱用 Debian 8 时 apt-get update 失败了，出现了以下错误 运行以下命令换源即可 官方消息：Removal of Wheezy and Jessie (except LTS) from mirrors"},{"title":"PyOne - 基于 Python 的 OneDrive 文件本地化浏览系统","date":"2020-01-02T03:21:30.000Z","url":"/archives/pyone/","tags":["Debian","OneinStack","Python","MongoDB","Redis"],"content":"PyOne 是一款基于 Python-Flask 的 OneDrive 文件本地化浏览系统，用 MongoDB 储存文件列表，Redis 缓存数据，支持绑定多个网盘，能极大的提高使用效率。 GitHub： 运行环境用 OneinStack 安装 Nginx &amp; MongoDB &amp; Redis 安装环境依赖 关闭 MongoDB 用户认证打开 /etc/mongod.conf ，修改 authorization 为 disabled 并保存。 搭建 PyOne 访问  检查是否成功运行，成功运行后按 Ctrl + A 再按 D 后台运行。 绑定 OneDrive 访问  登录后台，默认密码 PyOne 点击 文件管理 绑定 OneDrive 绑定域名用 OneinStack 新建一个站点 打开 /usr/local/nginx/conf/vhost/网站域名.conf ，添加以下配置进行反代 重启 Nginx 😋 Enjoy it !"},{"title":"HP 暗影精灵 2 安装黑苹果（macOS Mojave 10.14.5）","date":"2020-01-01T15:19:00.000Z","url":"/archives/hp-install-macos/","tags":["macOS","黑苹果"],"content":"萌樱这里分享一个暗影精灵 2 macOS 10.14.5 的 EFI 及安装教程。 如果想安装 macOS 10.15，可以看「HP 暗影精灵 2 EFI（macOS Catalina 10.15.2）」。 WiFi 需要更换无线网卡 没有影响日常使用的 Bug 可以更新到最新的 Mojave 10.14.6 下载macOS：macOS Mojave 10.14.5(18F132) Installer with Clover 4928.dmg EFI：CLOVER_macOS Mojave 10.14.5.rar balenaEtcher： DiskGenius： 安装修改 BIOS 设置 开机按 F10 进入 BIOS。 关闭安全启动，按 F10 保存设置并退出 BIOS。 制作安装盘 插入 U 盘后打开 balenaEtcher ，把下载好的 macOS 写入 U 盘。 打开 DiskGenius ，删除 U 盘 EFI 文件夹 里的 CLOVER 文件夹。 把下载的 CLOVER 文件夹粘贴进 U 盘 EFI 文件夹里。 安装 macOS macOS 推荐安装在固态硬盘上 如果想装进某一个分区，该分区的硬盘上必须要有一个 200 MB 的 ESP 分区 开机按 ESC 暂停启动，然后按 F9 选择 U 盘启动。 进入 CLOVER 后，选择 Boot macOS Install from Install macOS Mojave 。 用磁盘工具，抹掉一个需要安装的磁盘或者分区。抹掉过程中可能会闪退回 macOS 实用工具，重复这个操作即可。 名称：macOS 格式：MacOS 扩展（日志式） 方案：GUID 分区图 返回到 macOS 实用工具，选择安装 macOS。安装过程中可能会多次自动重启，每次都需要手动选择 U 盘启动，然后选择 Boot macOS Install from macOS 进入到安装界面，安装时间大约 20 分钟。 替换系统的 EFI进入系统后，需要把 U 盘内的 EFI 替换到硬盘内，否则拔掉 U 盘不能进入 macOS 。 打开终端，输入以下命令 把 U 盘内的 EFI 文件夹（有 README.txt）拷贝粘贴到硬盘内的 EFI 文件夹，选择替换所有文件。替换完成后拔掉 U 盘，重启电脑。 😋 Enjoy it ! 原文件链接macOS ：【黑果小兵】macOS Mojave 10.14.5 18F132 正式版 with Clover 4928原版镜像 EFI ：[config] 暗影精灵2固态换PM981EFI分享"}]